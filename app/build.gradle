apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.example.hellojni"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        //使用自定义的Android.mk 这个选项不需要
//        ndk{
//            moduleName "hello-jni"
//            abiFilters "armeabi", "armeabi-v7a", "x86"
//        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets{
        main{
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = [] //告诉编译器 jni这个目录不存在,
                             //不会自动生成并使用 <project>/build/intermediates/ndk/release/Android.mk
        }
    }
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}

task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
    // android.mk 地址 ，自行更改
    def androidMK = "$projectDir/src/main/jni/Android.mk"
    // application.mk 地址， 自行更改
    def applicationMK = "$projectDir/src/main/jni/Application.mk"

    def ndkDir = plugins.getPlugin('com.android.application').sdkHandler.getNdkFolder()

    def cmd = ["$ndkDir\\ndk-build.cmd", "NDK_PROJECT_PATH=$projectDir", "NDK_DEBUG=1",
               "APP_BUILD_SCRIPT=$androidMK", "NDK_APPLICATION_MK=$applicationMK"]

    println(cmd)
    commandLine cmd
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
}
